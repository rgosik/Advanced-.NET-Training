//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.Transformation {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rectangle", Namespace="WCFService.Standard")]
    [System.SerializableAttribute()]
    public partial class Rectangle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double HeightField;
        
        private double WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomServiceException", Namespace="http://schemas.datacontract.org/2004/07/WCFService")]
    [System.SerializableAttribute()]
    public partial class CustomServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="WCFService.Standard", ConfigurationName="Transformation.ShapeTransformation", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface ShapeTransformation {
        
        [System.ServiceModel.OperationContractAttribute(Action="WCFService.Standard/ShapeTransformation/GetRectangle", ReplyAction="WCFService.Standard/ShapeTransformation/GetRectangleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Client.Transformation.CustomServiceException), Action="WCFService.Standard/ShapeTransformation/GetRectangleCustomServiceExceptionFault", Name="CustomServiceException", Namespace="http://schemas.datacontract.org/2004/07/WCFService")]
        Client.Transformation.Rectangle GetRectangle(double width, double height);
        
        [System.ServiceModel.OperationContractAttribute(Action="WCFService.Standard/ShapeTransformation/ChangeSize", ReplyAction="WCFService.Standard/ShapeTransformation/ChangeSizeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Client.Transformation.CustomServiceException), Action="WCFService.Standard/ShapeTransformation/ChangeSizeCustomServiceExceptionFault", Name="CustomServiceException", Namespace="http://schemas.datacontract.org/2004/07/WCFService")]
        Client.Transformation.Rectangle ChangeSize(Client.Transformation.Rectangle rect, double factor);
        
        [System.ServiceModel.OperationContractAttribute(Action="WCFService.Standard/ShapeTransformation/GetSquare", ReplyAction="WCFService.Standard/ShapeTransformation/GetSquareResponse")]
        double GetSquare(Client.Transformation.Rectangle rect);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ShapeTransformationChannel : Client.Transformation.ShapeTransformation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShapeTransformationClient : System.ServiceModel.ClientBase<Client.Transformation.ShapeTransformation>, Client.Transformation.ShapeTransformation {
        
        public ShapeTransformationClient() {
        }
        
        public ShapeTransformationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ShapeTransformationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShapeTransformationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShapeTransformationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.Transformation.Rectangle GetRectangle(double width, double height) {
            return base.Channel.GetRectangle(width, height);
        }
        
        public Client.Transformation.Rectangle ChangeSize(Client.Transformation.Rectangle rect, double factor) {
            return base.Channel.ChangeSize(rect, factor);
        }
        
        public double GetSquare(Client.Transformation.Rectangle rect) {
            return base.Channel.GetSquare(rect);
        }
    }
}
